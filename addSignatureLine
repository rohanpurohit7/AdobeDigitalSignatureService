package com.Rohan;



/**
 * Created by Rohan on 12/30/2016.
 */

// Serves the purpose of adding custom signature fields to PDF documents if required .

/* This Java Quick Start uses the following JAR files
 * 1. adobe-signatures-client.jar
 * 2. adobe-livecycle-client.jar
 * 3. adobe-usermanager-client.jar
 * 4. adobe-utilities.jar
 * 5. jbossall-client.jar (use a different JAR file if LiveCycle ES is not deployed
 * on JBoss)
 *
 * These JAR files are located in the following path:
 * <install directory>/Adobe/LiveCycle9.0/LiveCycle_ES_SDK/client-libs/common
 *
 * For complete details about the location of these JAR files,
 * see "Including LiveCycle ES library files" in Programming
 * with LiveCycle ES
 */
 


import java.util.Properties;
import java.util.*;
import java.io.File;
import java.io.FileInputStream;
import com.adobe.livecycle.signatures.client.*;
import com.adobe.livecycle.signatures.client.types.*;
import com.adobe.idp.Document;
import com.adobe.idp.dsc.clientsdk.ServiceClientFactory;
import com.adobe.idp.dsc.clientsdk.ServiceClientFactoryProperties;

public class addSignatureLine {

        public static void main(String[] args) {

            try
            {
                //Set connection properties required to invoke LiveCycle ES
                Properties connectionProps = new Properties();
                connectionProps.setProperty(ServiceClientFactoryProperties.DSC_DEFAULT_SOAP_ENDPOINT, "http://xyz.xx.yy.zz:22511"); //soap endpoint
                connectionProps.setProperty(ServiceClientFactoryProperties.DSC_TRANSPORT_PROTOCOL, ServiceClientFactoryProperties.DSC_SOAP_PROTOCOL);
                connectionProps.setProperty(ServiceClientFactoryProperties.DSC_SERVER_TYPE, "WebSphere");
                connectionProps.setProperty(ServiceClientFactoryProperties.DSC_CREDENTIAL_USERNAME,"administrator");
                connectionProps.setProperty(ServiceClientFactoryProperties.DSC_CREDENTIAL_PASSWORD, "password");
                System.out.println("Before Connection:");
                // Create a ServiceClientFactory instance
                ServiceClientFactory myFactory = ServiceClientFactory.createInstance(connectionProps);
                System.out.println("Connection to ALCES3 established");

                //Create a SignatureServiceClient object
                SignatureServiceClient signClient = new SignatureServiceClient(myFactory);

                //Specify a PDF document to which a signature field is added
                FileInputStream fileInputStream = new FileInputStream("C:\\pdfNeedingSignatureField.pdf");
                Document inDoc = new Document (fileInputStream);

                //Specify the name of the signature field
                String fieldName = "SignatureField1";

                //Create a  PositionRectangle object that specifies the signature fields location
                PositionRectangle post = new  PositionRectangle(240,47,133,12);

                //Specify the page number that will contain the signature field
                java.lang.Integer pageNum = new java.lang.Integer(1);

                //Add a signature field to the PDF document
                Document sigFieldPDF = signClient.addSignatureField(
                        inDoc,
                        fieldName,
                        pageNum,
                        post,
                        null,
                        null);

                //Save the PDF document that contains the signature field
                File outFile = new File("C:\\pdfwithaSignatureField.pdf");
                sigFieldPDF.copyToFile(outFile);
            }

            catch (Exception ee)
            {
                ee.printStackTrace();
            }
        }
    }


